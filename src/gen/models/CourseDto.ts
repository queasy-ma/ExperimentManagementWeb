/* tslint:disable */
/* eslint-disable */
/**
 * ExperimentManagement API
 * ExperimentManagement API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExperimentDto } from './ExperimentDto';
import {
    ExperimentDtoFromJSON,
    ExperimentDtoFromJSONTyped,
    ExperimentDtoToJSON,
} from './ExperimentDto';

/**
 * 
 * @export
 * @interface CourseDto
 */
export interface CourseDto {
    /**
     * 
     * @type {number}
     * @memberof CourseDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CourseDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CourseDto
     */
    description?: string;
    /**
     * 
     * @type {Array<ExperimentDto>}
     * @memberof CourseDto
     */
    experiments?: Array<ExperimentDto>;
}

/**
 * Check if a given object implements the CourseDto interface.
 */
export function instanceOfCourseDto(value: object): boolean {
    return true;
}

export function CourseDtoFromJSON(json: any): CourseDto {
    return CourseDtoFromJSONTyped(json, false);
}

export function CourseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CourseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'experiments': json['experiments'] == null ? undefined : ((json['experiments'] as Array<any>).map(ExperimentDtoFromJSON)),
    };
}

export function CourseDtoToJSON(value?: CourseDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'experiments': value['experiments'] == null ? undefined : ((value['experiments'] as Array<any>).map(ExperimentDtoToJSON)),
    };
}

