/* tslint:disable */
/* eslint-disable */
/**
 * ExperimentManagement API
 * ExperimentManagement API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExperimentContentDto } from './ExperimentContentDto';
import {
    ExperimentContentDtoFromJSON,
    ExperimentContentDtoFromJSONTyped,
    ExperimentContentDtoToJSON,
} from './ExperimentContentDto';

/**
 * 
 * @export
 * @interface ExperimentDto
 */
export interface ExperimentDto {
    /**
     * 
     * @type {number}
     * @memberof ExperimentDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ExperimentDto
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ExperimentDto
     */
    type?: string;
    /**
     * 
     * @type {number}
     * @memberof ExperimentDto
     */
    courseId?: number;
    /**
     * 
     * @type {Array<ExperimentContentDto>}
     * @memberof ExperimentDto
     */
    experimentContents?: Array<ExperimentContentDto>;
}

/**
 * Check if a given object implements the ExperimentDto interface.
 */
export function instanceOfExperimentDto(value: object): boolean {
    return true;
}

export function ExperimentDtoFromJSON(json: any): ExperimentDto {
    return ExperimentDtoFromJSONTyped(json, false);
}

export function ExperimentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperimentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'type': json['type'] == null ? undefined : json['type'],
        'courseId': json['courseId'] == null ? undefined : json['courseId'],
        'experimentContents': json['experimentContents'] == null ? undefined : ((json['experimentContents'] as Array<any>).map(ExperimentContentDtoFromJSON)),
    };
}

export function ExperimentDtoToJSON(value?: ExperimentDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'title': value['title'],
        'type': value['type'],
        'courseId': value['courseId'],
        'experimentContents': value['experimentContents'] == null ? undefined : ((value['experimentContents'] as Array<any>).map(ExperimentContentDtoToJSON)),
    };
}

